services:
  mongo1:
    image: mongo:8.0.3
    container_name: mongo1
    ports:
      - "27018:27018"
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27018"]
    volumes:
      - mongo1_data:/data/db
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongo1:27018',priority:1},{_id:1,host:'mongo2:27019',priority:0.5},{_id:2,host:'mongo3:27020',priority:0.5}]}) }" | mongosh --port 27018 --quiet
      interval: 10s
      timeout: 30s
      start_period: 5s
      retries: 50

  mongo2:
    image: mongo:8.0.3
    container_name: mongo2
    ports:
      - "27019:27019"
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27019"]
    volumes:
      - mongo2_data:/data/db

  mongo3:
    image: mongo:8.0.3
    container_name: mongo3
    ports:
      - "27020:27020"
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27020"]
    volumes:
      - mongo3_data:/data/db

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:
  mongo1_config:
  mongo2_config:
  mongo3_config:
